@model string
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/Main_Layout.cshtml";
}

<style>
    .container {
        margin-top: 00px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            font-weight: bold;
        }

        .form-group input {
            width: 300px;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

    .btn-save {
        background-color: orange;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
</style>
<h2 class="text-center" style="margin-top: 100px;">Practice Time</h2>
<br />
<div class="form-group">
    <label for="englishWord" style="color:blue; font-weight:bold;">İngilizce Kelime:</label>
    <input type="text" id="englishWord" name="englishWord" class="form-control" />
</div>
<div class="form-group">
    <label for="turkishWord" style="color:red; font-weight:bold;">Türkçe Kelime:</label>
    <input type="text" id="turkishWord" name="turkishWord" class="form-control" />
</div>
<div class="text-center">
    <button id="checkButton" class="btn-save">Cevabı Kontrol Et</button>
</div>
<div id="notification" style="margin-top:20px;" class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-delay="6000">
    <div class="toast-header">
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="toast-body"></div>
</div>
<script>
    var turkishWordInput = document.getElementById("turkishWord");
    var englishWordInput = document.getElementById("englishWord");
    var checkButton = document.getElementById("checkButton");
    var notification = document.getElementById("notification");

    // Yeni İngilizce kelimeyi al ve İngilizce kelime alanına yerleştir
    function getNewEnglishWord() {
        fetch("/PracticeFavorite/GetNewEnglishWord")
            .then(response => response.text())
            .then(newEnglishWord => {
                englishWordInput.value = newEnglishWord;
            });
    }

    // Sayfa yüklendiğinde yeni İngilizce kelimeyi al ve İngilizce kelime alanına yerleştir
    document.addEventListener("DOMContentLoaded", function () {
        getNewEnglishWord();
    });

    checkButton.addEventListener("click", function () {
        var turkishWord = turkishWordInput.value;
        var englishWord = englishWordInput.value;

        // Sunucuya doğrulama isteği gönder
        fetch("/PracticeFavorite/CheckTranslation?turkishWord=" + turkishWord + "&englishWord=" + englishWord)
            .then(response => response.json())
            .then(data => {
                if (data.isCorrect) {
                    // Doğru cevap verildi, yeni İngilizce kelimeyi al
                    getNewEnglishWord();
                    turkishWordInput.value = ""; // Türkçe kelime alanını boşalt
                    showNotification("Doğru cevap!", "success"); // Bildirim göster
                } else {
                    showNotification("Yanlış cevap! Tekrar deneyin.", "error"); // Bildirim göster
                }
            });
    });

    function showNotification(message, type) {
        var toastBody = notification.querySelector(".toast-body");
        toastBody.textContent = message;

        notification.classList.remove("bg-success", "bg-danger");
        if (type === "success") {
            notification.classList.add("bg-success");
        } else if (type === "error") {
            notification.classList.add("bg-danger");
        }

        var toast = new bootstrap.Toast(notification);
        toast.show();
    }

</script>
